;; -*- emacs-lisp -*-
(defvar +elisp-dir+ "~/.emacs.d")
(defvar +org-dir+ (concat +elisp-dir+ "/org"))
;; -------------- STARTUP  --------------
(require 'cl-lib); Allows use of Common-Lisp libraries
;;; Useful default packages
(require 'saveplace)
(require 'uniquify)
(require 'ansi-color)
(require 'recentf)
(add-hook 'emacs-startup-hook
          (lambda () (find-file (concat +org-dir+ "/todo.org"))))
(recentf-mode 1)
(setq recentf-max-menu-items 25)

(global-linum-mode t);; Global Line Number mode on startup
(column-number-mode t);; Column Number mode
;;; Emacs server
;; (setq server-port 1337)
;; (setq server-use-tcp t)
;; (setq server-host (system-name))
(server-start) ; Start the emacs server
(setq enable-recursive-minibuffers t)	; Useful
(delete-selection-mode 1) 	      	; Deletes text in the region
;; Abbrevations mode on startup
(setq-default abbrev-mode t)
(read-abbrev-file (concat +elisp-dir+ "/abbrev_defs"))
(setq save-abbrevs t)
;; Load PATHS
(let ((default-directory +elisp-dir+))
  (normal-top-level-add-subdirs-to-load-path))

;;; subword
(global-subword-mode t)
;;; Show matching parens
(show-paren-mode 1)
(setq show-paren-style 'expression)
;;; Indentation
(setq-default indent-tabs-mode nil)
;;; Electric pair mode
;; (electric-pair-mode 1)

;; Uses echo area to display tooltips
(tooltip-mode -1)
(setq tooltip-use-echo-area t)

;;; Minibuffer/Echo area/Mode line
(setq echo-keystrokes 0.01)

(setq inhibit-startup-message t)
;;; Uniquify
(setq uniquify-buffer-name-style 'post-forward)
;; --------------- STARTUP END ---------------

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -------------- Editing ---------- ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(setq next-line-add-newlines nil)
(setq tab-width 4)

;;;;;;;;;;;;;;
;; Terminal ;;
;;;;;;;;;;;;;;
(defun term-key-bindings ()
  (define-key term-raw-map (kbd "M-&") #'async-shell-command)
  (define-key term-raw-map (kbd "M-:") #'eval-expression)
  (define-key term-raw-map (kbd "C-w") nil)
  (define-key term-raw-map (kbd "C-p") 'term-send-raw)
  (define-key term-raw-map (kbd "M-o") #'other-window))

(defun term-local-settings ()
  (setq term-buffer-maximum-size 1024))

(add-hook 'term-mode-hook #'term-key-bindings)
(add-hook 'term-mode-hook #'term-local-settings)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; --------------- MISC --------------- ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Python3 shebang
(add-to-list 'interpreter-mode-alist '("python3" . python-mode))
;;; Debugging
;; (setq stack-trace-on-error t)
;; Setting Auto-Save directory and Backup Directory
(let ((tmp (concat +elisp-dir+ "/tmp")))
 (setq backup-directory-alist
       `((".*" . ,tmp)))
 (setq auto-save-file-name-transforms
       `((".*" ,tmp t))))

;; ;; Changes all yes/no questions to y/n type
(fset 'yes-or-no-p 'y-or-n-p)

;; TRAMP mode
(setq tramp-default-method "ssh")
(setq tramp-verbose 0)
(setq password-cache-expiry 3600)
;; (add-to-list 'tramp-default-proxies-alist
;; 	     '(nil "\\`root\\'" "/ssh:%h:"))
;; (add-to-list 'tramp-default-proxies-alist
;; 	     '((regexp-quote (system-name)) nil nil))

;; Loading extra info directories
(setq Info-directory-list
      '("/usr/local/share/info/"
	"/usr/share/info/emacs-24"
	"/home/shermpay/.emacs.d/info"	
	"/usr/share/info/"))

;;; Package Manager
(require 'package)
(setq package-archives
      '(("gnu"         . "http://elpa.gnu.org/packages/")
        ("marmalade"   . "http://marmalade-repo.org/packages/")
	("melpa"       . "http://melpa.milkbox.net/packages/")))
(package-initialize)

;;; Browser
(setq browse-url-generic-program "/usr/bin/google-chrome-stable"
      browse-url-browser-function 'browse-url-generic)
;; -------------------- MISC END --------------------

;;; Load other customizations appropriately
(defun timed-require (mode)
  (let ((st (float-time)))
    (require mode)
    (message "%s: %f seconds" mode (- (float-time) st))))
(timed-require 'evilrc)
(timed-require 'my-functions)
(timed-require 'my-plugins)
(timed-require 'my-faces)
(timed-require 'my-keybindings)
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ecb-options-version "2.40")
 '(scroll-bar-mode nil))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
