# The following lines were added by compinstall

zstyle ':completion:*' completer _expand _complete _ignored _correct _approximate
zstyle ':completion:*' matcher-list '' 'm:{[:lower:]}={[:upper:]} l:|=* r:|=*' 'l:|=* r:|=*' 'r:|[._-]=** r:|=**'
zstyle :compinstall filename '/home/shermpay/.zshrc'

autoload -Uz compinit
compinit
# End of lines added by compinstall
# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=10000
SAVEHIST=10000
# End of lines configured by zsh-newuser-install

# Dirstack
DIRSTACKFILE="$HOME/.cache/zsh/dirs"
if [[ -f $DIRSTACKFILE ]] && [[ $#dirstack -eq 0 ]]; then
  dirstack=( ${(f)"$(< $DIRSTACKFILE)"} )
  [[ -d $dirstack[1] ]] && cd $dirstack[1]
fi
chpwd() {
  print -l $PWD ${(u)dirstack} >$DIRSTACKFILE
}

DIRSTACKSIZE=20

setopt autopushd pushdsilent pushdtohome

## Remove duplicate entries
setopt pushdignoredups

## This reverts the +/- operators.
setopt pushdminus

# enable color support
autoload -U colors && colors

# use Emacs mode
bindkey -e

# add handy aliases
if [ -x /usr/bin/dircolors ]; then
    alias ls='ls --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Read from an alias file other aliases
if [[ -f ~/.zsh_aliases ]] ; then
    source ~/.zsh_aliases
fi
# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'


# PS1 Prompt
# userps1="\e[44m\[\e[1;36m\]\\u\[\e[m\]"
# dirps1="\e[40m\[\e[2;37m\][\\w]\[\e[m\]"
# cmd='{$(ls --color=always -t -w 80 | head -n 10 | xargs echo)}'
# prompt="\\nÎ» *> "
# export PS1="${debian_chroot:+($debian_chroot)}"$userps1$dirps1$cmd$prompt
# zsh Prompt
() {
  local user="%n"
  local host="%m"
  local newline=$'\n'
  local userps1="(${host})"
  local wd_prompt="[%3~]"
  local dirps1="%{$fg[cyan]%}${wd_prompt}%{$reset_color%}"
  local timestampps1="%{$fg[blue]%}<$(date '+%F %T')>%{$reset_color%}"
  local main_prompt="$ "

  PROMPT="${userps1}${dirps1}${timestampps1}${newline}${main_prompt}"
  RPROMPT=""
}

# For completion
fpath[1,0]=~/.zsh/completion/

# This way the completion script does not have to parse Bazel's options
# repeatedly.  The directory in cache-path must be created manually.
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.zsh/cache

export MY_DRIVE='/home/shermanpay/DriveFS/My Drive'

# Emacs vterm support
vterm_printf(){
    if [ -n "$TMUX" ]; then
        # Tell tmux to pass the escape sequences through
        # (Source: http://permalink.gmane.org/gmane.comp.terminal-emulators.tmux.user/1324)
        printf "\ePtmux;\e\e]%s\007\e\\" "$1"
    elif [ "${TERM%%-*}" = "screen" ]; then
        # GNU screen (screen, screen-256color, screen-256color-bce)
        printf "\eP\e]%s\007\e\\" "$1"
    else
        printf "\e]%s\e\\" "$1"
    fi
}
vterm_prompt_end() {
    vterm_printf "51;A$(whoami)@$(hostname):$(pwd)";
}
setopt PROMPT_SUBST
PROMPT="$PROMPT%{$(vterm_prompt_end)%}"

vterm_cmd() {
    local vterm_elisp
    vterm_elisp=""
    while [ $# -gt 0 ]; do
        vterm_elisp="$vterm_elisp""$(printf '"%s" ' "$(printf "%s" "$1" | sed -e 's|\\|\\\\|g' -e 's|"|\\"|g')")"
        shift
    done
    vterm_printf "51;E$vterm_elisp"
}

autoload -Uz add-zsh-addhook
# For vterm-buffer-name-string
add-zsh-hook -Uz chpwd (){ print -Pn "\e]2;%m\a" }

function cd_ls() {
    emulate -L zsh
    echo $(ls --color=auto | head -n 8)
}

if [ -r ~/.zshrc.local ]; then
	source ~/.zshrc.local
fi
